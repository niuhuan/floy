// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.28.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class BbsCategory {
  final String fid;
  final String name;
  final List<Forumlist> forumlist;

  const BbsCategory({
    required this.fid,
    required this.name,
    required this.forumlist,
  });

  @override
  int get hashCode => fid.hashCode ^ name.hashCode ^ forumlist.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is BbsCategory &&
          runtimeType == other.runtimeType &&
          fid == other.fid &&
          name == other.name &&
          forumlist == other.forumlist;
}

class Forumlist {
  final String fid;
  final String name;
  final String description;
  final int threads;
  final int posts;
  final int todayposts;
  final Lastpost lastpost;

  const Forumlist({
    required this.fid,
    required this.name,
    required this.description,
    required this.threads,
    required this.posts,
    required this.todayposts,
    required this.lastpost,
  });

  @override
  int get hashCode =>
      fid.hashCode ^
      name.hashCode ^
      description.hashCode ^
      threads.hashCode ^
      posts.hashCode ^
      todayposts.hashCode ^
      lastpost.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Forumlist &&
          runtimeType == other.runtimeType &&
          fid == other.fid &&
          name == other.name &&
          description == other.description &&
          threads == other.threads &&
          posts == other.posts &&
          todayposts == other.todayposts &&
          lastpost == other.lastpost;
}

class Lastpost {
  final String author;
  final String dateline;
  final String subject;
  final int tid;

  const Lastpost({
    required this.author,
    required this.dateline,
    required this.subject,
    required this.tid,
  });

  @override
  int get hashCode =>
      author.hashCode ^ dateline.hashCode ^ subject.hashCode ^ tid.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Lastpost &&
          runtimeType == other.runtimeType &&
          author == other.author &&
          dateline == other.dateline &&
          subject == other.subject &&
          tid == other.tid;
}

class Medal {
  final String medalid;
  final String name;
  final String image;
  final String description;

  const Medal({
    required this.medalid,
    required this.name,
    required this.image,
    required this.description,
  });

  @override
  int get hashCode =>
      medalid.hashCode ^ name.hashCode ^ image.hashCode ^ description.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Medal &&
          runtimeType == other.runtimeType &&
          medalid == other.medalid &&
          name == other.name &&
          image == other.image &&
          description == other.description;
}

class Postlist {
  final String pid;
  final String isApp;
  final String fid;
  final String tid;
  final String first;
  final String author;
  final String authorid;
  final String avatar;
  final String subject;
  final String dateline;
  final String message;
  final List<Ratelog> ratelog;
  final List<Medal> medals;

  const Postlist({
    required this.pid,
    required this.isApp,
    required this.fid,
    required this.tid,
    required this.first,
    required this.author,
    required this.authorid,
    required this.avatar,
    required this.subject,
    required this.dateline,
    required this.message,
    required this.ratelog,
    required this.medals,
  });

  @override
  int get hashCode =>
      pid.hashCode ^
      isApp.hashCode ^
      fid.hashCode ^
      tid.hashCode ^
      first.hashCode ^
      author.hashCode ^
      authorid.hashCode ^
      avatar.hashCode ^
      subject.hashCode ^
      dateline.hashCode ^
      message.hashCode ^
      ratelog.hashCode ^
      medals.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Postlist &&
          runtimeType == other.runtimeType &&
          pid == other.pid &&
          isApp == other.isApp &&
          fid == other.fid &&
          tid == other.tid &&
          first == other.first &&
          author == other.author &&
          authorid == other.authorid &&
          avatar == other.avatar &&
          subject == other.subject &&
          dateline == other.dateline &&
          message == other.message &&
          ratelog == other.ratelog &&
          medals == other.medals;
}

class Ratelog {
  final String username;
  final int score;
  final String reason;

  const Ratelog({
    required this.username,
    required this.score,
    required this.reason,
  });

  @override
  int get hashCode => username.hashCode ^ score.hashCode ^ reason.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Ratelog &&
          runtimeType == other.runtimeType &&
          username == other.username &&
          score == other.score &&
          reason == other.reason;
}

class ThreadData {
  final int total;
  final int perpage;
  final int page;
  final ThreadDetail thread;
  final List<Postlist> postlist;
  final int errcode;
  final String errmsg;

  const ThreadData({
    required this.total,
    required this.perpage,
    required this.page,
    required this.thread,
    required this.postlist,
    required this.errcode,
    required this.errmsg,
  });

  @override
  int get hashCode =>
      total.hashCode ^
      perpage.hashCode ^
      page.hashCode ^
      thread.hashCode ^
      postlist.hashCode ^
      errcode.hashCode ^
      errmsg.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ThreadData &&
          runtimeType == other.runtimeType &&
          total == other.total &&
          perpage == other.perpage &&
          page == other.page &&
          thread == other.thread &&
          postlist == other.postlist &&
          errcode == other.errcode &&
          errmsg == other.errmsg;
}

class ThreadDetail {
  final String tid;
  final String fid;
  final String author;
  final String authorid;
  final String subject;
  final int views;
  final int replies;
  final String attachment;
  final String recommendAdd;
  final String recommendSub;
  final String favtimes;
  final String sharetimes;
  final int relay;

  const ThreadDetail({
    required this.tid,
    required this.fid,
    required this.author,
    required this.authorid,
    required this.subject,
    required this.views,
    required this.replies,
    required this.attachment,
    required this.recommendAdd,
    required this.recommendSub,
    required this.favtimes,
    required this.sharetimes,
    required this.relay,
  });

  @override
  int get hashCode =>
      tid.hashCode ^
      fid.hashCode ^
      author.hashCode ^
      authorid.hashCode ^
      subject.hashCode ^
      views.hashCode ^
      replies.hashCode ^
      attachment.hashCode ^
      recommendAdd.hashCode ^
      recommendSub.hashCode ^
      favtimes.hashCode ^
      sharetimes.hashCode ^
      relay.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ThreadDetail &&
          runtimeType == other.runtimeType &&
          tid == other.tid &&
          fid == other.fid &&
          author == other.author &&
          authorid == other.authorid &&
          subject == other.subject &&
          views == other.views &&
          replies == other.replies &&
          attachment == other.attachment &&
          recommendAdd == other.recommendAdd &&
          recommendSub == other.recommendSub &&
          favtimes == other.favtimes &&
          sharetimes == other.sharetimes &&
          relay == other.relay;
}

class ThreadInList {
  final String tid;
  final String fid;
  final String author;
  final String authorid;
  final String authorGroupid;
  final String authorGrouptitle;
  final List<Medal> authorMedal;
  final String avatar;
  final String subject;
  final String dateline;
  final String views;
  final String replies;
  final String lastpost;
  final String lastposter;
  final String status;
  final String displayorder;

  const ThreadInList({
    required this.tid,
    required this.fid,
    required this.author,
    required this.authorid,
    required this.authorGroupid,
    required this.authorGrouptitle,
    required this.authorMedal,
    required this.avatar,
    required this.subject,
    required this.dateline,
    required this.views,
    required this.replies,
    required this.lastpost,
    required this.lastposter,
    required this.status,
    required this.displayorder,
  });

  @override
  int get hashCode =>
      tid.hashCode ^
      fid.hashCode ^
      author.hashCode ^
      authorid.hashCode ^
      authorGroupid.hashCode ^
      authorGrouptitle.hashCode ^
      authorMedal.hashCode ^
      avatar.hashCode ^
      subject.hashCode ^
      dateline.hashCode ^
      views.hashCode ^
      replies.hashCode ^
      lastpost.hashCode ^
      lastposter.hashCode ^
      status.hashCode ^
      displayorder.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ThreadInList &&
          runtimeType == other.runtimeType &&
          tid == other.tid &&
          fid == other.fid &&
          author == other.author &&
          authorid == other.authorid &&
          authorGroupid == other.authorGroupid &&
          authorGrouptitle == other.authorGrouptitle &&
          authorMedal == other.authorMedal &&
          avatar == other.avatar &&
          subject == other.subject &&
          dateline == other.dateline &&
          views == other.views &&
          replies == other.replies &&
          lastpost == other.lastpost &&
          lastposter == other.lastposter &&
          status == other.status &&
          displayorder == other.displayorder;
}

class ThreadPage {
  final int total;
  final int page;
  final List<ThreadInList> threadlist;

  const ThreadPage({
    required this.total,
    required this.page,
    required this.threadlist,
  });

  @override
  int get hashCode => total.hashCode ^ page.hashCode ^ threadlist.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ThreadPage &&
          runtimeType == other.runtimeType &&
          total == other.total &&
          page == other.page &&
          threadlist == other.threadlist;
}
